import ISolidSession from "../../../solidSession/ISolidSession";
import { ISessionCreator } from "../../../solidSession/SessionCreator";
import IJoseUtility from "../../../jose/IJoseUtility";
import { IStorageUtility } from "../../../localStorage/StorageUtility";
export interface ITokenSaver {
    saveTokenAndGetSession(localUserId: string, idToken: string, accessToken?: string, refreshToken?: string): Promise<ISolidSession>;
}
export default class TokenSaver implements ITokenSaver {
    private sessionCreator;
    private joseUtility;
    private storageUtility;
    constructor(sessionCreator: ISessionCreator, joseUtility: IJoseUtility, storageUtility: IStorageUtility);
    saveTokenAndGetSession(localUserId: string, idToken: string, accessToken?: string, refreshToken?: string): Promise<ISolidSession>;
}
