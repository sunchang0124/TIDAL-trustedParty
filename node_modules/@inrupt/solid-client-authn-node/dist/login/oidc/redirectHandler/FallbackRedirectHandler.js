"use strict";
var __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {
    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;
    if (typeof Reflect === "object" && typeof Reflect.decorate === "function") r = Reflect.decorate(decorators, target, key, desc);
    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;
    return c > 3 && r && Object.defineProperty(target, key, r), r;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.FallbackRedirectHandler = void 0;
const tsyringe_1 = require("tsyringe");
const url_1 = require("url");
const SessionInfoManager_1 = require("../../../sessionInfo/SessionInfoManager");
let FallbackRedirectHandler = class FallbackRedirectHandler {
    async canHandle(redirectUrl) {
        try {
            new url_1.URL(redirectUrl);
            return true;
        }
        catch (e) {
            throw new Error(`[${redirectUrl}] is not a valid URL, and cannot be used as a redirect URL: ${e.toString()}`);
        }
    }
    async handle(_redirectUrl) {
        return SessionInfoManager_1.getUnauthenticatedSession();
    }
};
FallbackRedirectHandler = __decorate([
    tsyringe_1.injectable()
], FallbackRedirectHandler);
exports.FallbackRedirectHandler = FallbackRedirectHandler;
//# sourceMappingURL=FallbackRedirectHandler.js.map